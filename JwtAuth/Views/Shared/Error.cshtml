@model ErrorViewModel
@{
    ViewData["Title"] = "Error";
    var statusCode = Context.Response.StatusCode;
    var statusMessage = statusCode switch
    {
        400 => "Bad Request",
        401 => "Unauthorized",
        403 => "Forbidden",
        404 => "Page Not Found",
        500 => "Internal Server Error",
        _ => "An error occurred"
    };
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card border-0 shadow">
                <div class="card-header bg-danger text-white">
                    <div class="d-flex align-items-center">
                        <i class="fas fa-exclamation-triangle fa-2x me-3"></i>
                        <h1 class="h3 mb-0">@statusCode - @statusMessage</h1>
                    </div>
                </div>
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <i class="fas fa-bug fa-5x text-danger mb-4"></i>
                        <h2 class="h4 text-gray-800 mb-3">Oops! Something went wrong.</h2>
                        <p class="lead">We're sorry, but we've encountered an error while processing your request.</p>
                    </div>

                    @if (Model.ShowRequestId)
                    {
                        <div class="alert alert-info">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-info-circle me-2"></i>
                                <div>
                                    <strong>Request ID:</strong>
                                    <div class="mt-1">
                                        <code>@Model.RequestId</code>
                                    </div>
                                    <small class="d-block mt-2">Please include this ID when contacting support.</small>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="mt-5">
                        <p class="mb-4">Here are some helpful links instead:</p>
                        <div class="d-flex justify-content-center flex-wrap gap-3">
                            <a href="/" class="btn btn-primary">
                                <i class="fas fa-home me-2"></i>Homepage
                            </a>
                            <a href="mailto:support@example.com" class="btn btn-outline-secondary">
                                <i class="fas fa-envelope me-2"></i>Contact Support
                            </a>
                            <a href="javascript:history.back()" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Go Back
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-footer bg-light text-center py-3">
                    <small class="text-muted">
                        <i class="far fa-clock me-1"></i> @DateTime.Now.ToString("F")
                    </small>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Context.RequestServices.GetRequiredService<IWebHostEnvironment>().IsDevelopment())
{
    <div class="container mt-4">
        <div class="card border-warning">
            <div class="card-header bg-warning">
                <h3 class="h5 mb-0">Development Mode</h3>
            </div>
            <div class="card-body">
                <p>
                    Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
                </p>
                <p class="mb-0">
                    <strong>Note:</strong> The Development environment should not be enabled for deployed applications as it can result in displaying sensitive information.
                </p>
            </div>
        </div>
    </div>
}

@section Styles {
    <style>
        .card {
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        }
        
        .card-header {
            padding: 1.5rem;
        }
        
        .card-body {
            padding: 2.5rem;
        }
        
        .fa-bug {
            opacity: 0.8;
        }
        
        .btn {
            min-width: 150px;
            transition: all 0.2s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
        }
        
        code {
            word-break: break-all;
            background-color: #f8f9fa;
            padding: 0.2rem 0.4rem;
            border-radius: 0.25rem;
            font-size: 0.875em;
        }
    </style>
}
